-- Creamos la primera tabla sin las columnas canal y estatus cliente (37 columnas)
CREATE TABLE DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_ULTIMA (
	CAMPANIA VARCHAR(255),
	TIPOCLIENTE VARCHAR(255),
	FECHA_INICIO VARCHAR(255),
	FECHA_FIN VARCHAR(255),
	CLIENTES BIGINT,
	COMPRARON NUMERIC(38,0),
	TASA_COMPRA NUMERIC(38,6),
	VENTA_TOTAL DOUBLE,
	VENTA_PROMEDIO DOUBLE,
	COMPRARON_RM NUMERIC(38,0),
	TASA_CLIENTE_RM NUMERIC(38,6),
	VENTA_TOTAL_RM DOUBLE,
	VENTA_PROMEDIO_RM DOUBLE,
	COMPRARON_P NUMERIC(38,0),
	TASA_CLIENTE_P NUMERIC(38,6),
	VENTA_TOTAL_P DOUBLE,
	VENTA_PROMEDIO_P DOUBLE,
	TICKETS NUMERIC(38,0),
	TICKET_PROM DOUBLE,
	TICKET_PROM_RM DOUBLE,
	TICKET_PROM_P DOUBLE,
	CLIENTE_ACTIVO NUMERIC(38,0),
	CLIENTE_SALDADO NUMERIC(38,0),
	CLIENTE_NUNCA NUMERIC(38,0),
	CLIENTE_CUENTA_PERDIDA NUMERIC(38,0),
	RM_ACTIVO NUMERIC(38,0),
	RM_SALDADO NUMERIC(38,0),
	RM_NUNCA NUMERIC(38,0),
	RM_CUENTA_PERDIDA NUMERIC(38,0),
	P_ACTIVO NUMERIC(38,0),
	P_SALDADO NUMERIC(38,0),
	P_NUNCA NUMERIC(38,0),
	P_CUENTA_PERDIDA NUMERIC(38,0),
	TASA_COMPRA_T NUMERIC(38,6),
	DIF_RESPUESTA NUMERIC(38,6),
	CTS_ADICIONALES NUMERIC(38,6),
	VENTA_ADICIONAL_RM DOUBLE
);


ALTER TABLE DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_ULTIMA RENAME COLUMN VENTA_ADICIONAL_RM TO VENTA_ADICIONAL 


CREATE OR REPLACE PROCEDURE MA_PRUEBA_TRANS_ULTIMA(VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255))
RETURNS REFTABLE(DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_ULTIMA)
LANGUAGE NZPLSQL AS BEGIN_PROC
DECLARE
	CONDICION VARCHAR(1000); -- EN ESTA VARIABLE SE GUARDA LA CONDICION DEL QUERY WHERE
	FECHA_I ALIAS FOR $1;-- FECHA_INICIO
	FECHA_F ALIAS FOR $2;-- FECHA_FIN
	CANAL_C ALIAS FOR $3; --CANAL
	ESTATUS_C ALIAS FOR $4;-- ESTATUSCLIENTE
	NOMBRE_CAMP ALIAS FOR $5;-- CAMPAÑA
	
	
BEGIN	
CONDICION := 'FECHA_FIN <> ''N/A'' AND  (FECHA_INICIO BETWEEN   '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )AND (FECHA_FIN BETWEEN  '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )';
-- CUANDO TIPOCLIENTE ES NO NULO 
IF ESTATUS_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (ESTATUSCLIENTE = '''|| ESTATUS_C ||''') ';
END IF;
-- CUANDO CAMPAÑA ES NO NULO
IF NOMBRE_CAMP IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CAMPANIA = '''|| NOMBRE_CAMP ||''') ' ;
END IF;
-- CUANDO CANAL ES NO NULO 
IF CANAL_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CANAL = '''|| CANAL_C ||''') ';
END IF;
DELETE FROM DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_ULTIMA;
EXECUTE IMMEDIATE 'INSERT INTO '|| REFTABLENAME ||' 
(SELECT A.*, TASA_COMPRA_T, TASA_COMPRA-TASA_COMPRA_T AS DIF_RESPUESTA, DIF_RESPUESTA*CLIENTES AS CTS_ADICIONALES, CTS_ADICIONALES*VENTA_PROMEDIO AS VENTA_ADICIONAL
FROM (SELECT *
	FROM (SELECT CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, COUNT(NUMCLIENTE)AS CLIENTES, SUM(COMPRAS) AS COMPRARON,
			SUM(COMPRAS)/COUNT(NUMCLIENTE) AS TASA_COMPRA, 
			
			SUM(SUM_PRECIO_VTA)AS VENTA_TOTAL,VENTA_TOTAL/COMPRARON AS VENTA_PROMEDIO,
			SUM(COMPRAS_RM)AS COMPRARON_RM,SUM(COMPRAS_RM)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_RM,
			SUM(SUM_PRECIO_VTA_RM) AS VENTA_TOTAL_RM,VENTA_TOTAL_RM/COMPRARON AS VENTA_PROMEDIO_RM,
			SUM(COMPRAS_P)AS COMPRARON_P,SUM(COMPRAS_P)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_P,
			SUM(SUM_PRECIO_VTA_P) AS VENTA_TOTAL_P,VENTA_TOTAL_P/COMPRARON AS VENTA_PROMEDIO_P,
			
			SUM(SUM_FACTURA) AS TICKETS, VENTA_TOTAL/TICKETS AS TICKET_PROM, VENTA_TOTAL_RM/TICKETS AS TICKET_PROM_RM,VENTA_TOTAL_P/TICKETS AS TICKET_PROM_P,
			SUM(ACTIVO)AS CLIENTE_ACTIVO,SUM(SALDADO)AS CLIENTE_SALDADO,SUM(NUNCA)AS CLIENTE_NUNCA,SUM(CUENTA_PERDIDA)AS CLIENTE_CUENTA_PERDIDA,
			
			SUM(RM_ACTIVO) AS RM_ACTIVO,SUM(RM_SALDADO) AS RM_SALDADO,SUM(RM_NUNCA) AS RM_NUNCA, SUM(RM_CUENTA_PERDIDA)AS RM_CUENTA_PERDIDA,
			
			SUM(P_ACTIVO) AS P_ACTIVO,SUM(P_SALDADO) AS P_SALDADO,SUM(P_NUNCA) AS P_NUNCA, SUM(P_CUENTA_PERDIDA)AS P_CUENTA_PERDIDA
		FROM(SELECT  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
				MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX(SMS_CAMPANA)AS SMS_CAMPANA,	
				MAX(RCS_CAMPANA) AS RCS_CAMPANA,	MAX(LLAMADA) AS LLAMADA,	MAX(WHATSAPP)AS WHATSAPP,	
				MAX(EMAIL)AS EMAIL,	MAX(BANNER)AS BANNER,	MAX(CINTILLO) AS CINTILLO,	MAX(PUSH)AS PUSH,	
				MAX(REDES_SOCIALES)AS REDES_SOCIALES, SUM(FACTURA)AS SUM_FACTURA, SUM(PRECIO_VTA)AS SUM_PRECIO_VTA,SUM(PRECIO_VTA_RM) AS SUM_PRECIO_VTA_RM,
				SUM(PRECIO_VTA_P) AS SUM_PRECIO_VTA_P,
				MAX(COMPRA)AS COMPRAS,
				MAX(COMPRA_RM)AS COMPRAS_RM, MAX(COMPRA_P)AS COMPRAS_P, 
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO''))THEN 1 ELSE NULL END AS ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO''))THEN 1 ELSE NULL END AS SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA''))THEN 1 ELSE NULL END AS NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA''))THEN 1 ELSE NULL END AS CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_RM > 0 )THEN 1 ELSE NULL END AS RM_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_P > 0 )THEN 1 ELSE NULL END AS P_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_CUENTA_PERDIDA
			FROM (SELECT  NUMCLIENTE,	/*CANAL,*/	UPPER(CAMPANIA)AS CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE,
					UPPER(ESTATUSCLIENTE)AS ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
					MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX("SMS_campana")AS SMS_campana,	
					MAX("RCS_campana") AS RCS_campana,	MAX("Llamada") AS Llamada,	MAX("Whatsapp")AS Whatsapp,	
					MAX("Email")AS Email,	MAX("Banner")AS Banner,	MAX("Cintillo") AS Cintillo,
					MAX("Push")AS Push,	MAX("Redes_sociales")AS Redes_sociales
				FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE  '|| CONDICION ||' 
				GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA, SUM(PRECIO_VTA) AS PRECIO_VTA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM ,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0  END AS PRECIO_VTA_P,
						CASE WHEN CARTERA IN (''Ropa'', ''Muebles'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_RM,
						CASE WHEN CARTERA IN (''Prestamos'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_P
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN)P
		)A
		
		
LEFT JOIN(
	SELECT *
	FROM (SELECT CAMPANIA, TIPOCLIENTE,SUM(COMPRAS)/COUNT(NUMCLIENTE)AS TASA_COMPRA_T
		FROM(SELECT  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO,	FECHA_FIN,
				MAX(COMPRA)AS COMPRAS,CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as TIPO
			FROM (select  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE, ESTATUSCLIENTE,
					FECHA_INICIO,	FECHA_FIN
				from DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||'
				GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_P,
						COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			WHERE  TIPO = 0
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO)P
		)B
ON A.CAMPANIA = B.CAMPANIA AND A.TIPOCLIENTE != B.TIPOCLIENTE
ORDER BY A.CAMPANIA, A.TIPOCLIENTE)';
RETURN REFTABLE;
END;
END_PROC;

-- Este procedimiento se ejecuta cuando canal y estatus cliente on nulos
EXECUTE MA_PRUEBA_TRANS_ULTIMA('2022-10-01','2022-10-31',NULL,NULL,'OCT22_RU3_2E')


-- Creamos la segunda tabla con la columna canal pero sin estatus cliente
CREATE TABLE DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_COMPLETA (
	CAMPANIA VARCHAR(255),
	TIPOCLIENTE VARCHAR(255),
	FECHA_INICIO VARCHAR(255),
	FECHA_FIN VARCHAR(255),
	CANAL VARCHAR(255),
	CLIENTES BIGINT,
	COMPRARON NUMERIC(38,0),
	TASA_COMPRA NUMERIC(38,6),
	VENTA_TOTAL DOUBLE,
	VENTA_PROMEDIO DOUBLE,
	COMPRARON_RM NUMERIC(38,0),
	TASA_CLIENTE_RM NUMERIC(38,6),
	VENTA_TOTAL_RM DOUBLE,
	VENTA_PROMEDIO_RM DOUBLE,
	COMPRARON_P NUMERIC(38,0),
	TASA_CLIENTE_P NUMERIC(38,6),
	VENTA_TOTAL_P DOUBLE,
	VENTA_PROMEDIO_P DOUBLE,
	TICKETS NUMERIC(38,0),
	TICKET_PROM DOUBLE,
	TICKET_PROM_RM DOUBLE,
	TICKET_PROM_P DOUBLE,
	CLIENTE_ACTIVO NUMERIC(38,0),
	CLIENTE_SALDADO NUMERIC(38,0),
	CLIENTE_NUNCA NUMERIC(38,0),
	CLIENTE_CUENTA_PERDIDA NUMERIC(38,0),
	RM_ACTIVO NUMERIC(38,0),
	RM_SALDADO NUMERIC(38,0),
	RM_NUNCA NUMERIC(38,0),
	RM_CUENTA_PERDIDA NUMERIC(38,0),
	P_ACTIVO NUMERIC(38,0),
	P_SALDADO NUMERIC(38,0),
	P_NUNCA NUMERIC(38,0),
	P_CUENTA_PERDIDA NUMERIC(38,0),
	TASA_COMPRA_T NUMERIC(38,6),
	DIF_RESPUESTA NUMERIC(38,6),
	CTS_ADICIONALES NUMERIC(38,6),
	VENTA_ADICIONAL_RM DOUBLE
);


CREATE OR REPLACE PROCEDURE MA_PRUEBA_TRANS_COMPLETA(VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255))
RETURNS REFTABLE(DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_COMPLETA)
LANGUAGE NZPLSQL AS BEGIN_PROC
DECLARE
	CONDICION VARCHAR(1000); -- EN ESTA VARIABLE SE GUARDA LA CONDICION DEL QUERY WHERE
	FECHA_I ALIAS FOR $1;-- FECHA_INICIO
	FECHA_F ALIAS FOR $2;-- FECHA_FIN
	CANAL_C ALIAS FOR $3; --CANAL
	ESTATUS_C ALIAS FOR $4;-- ESTATUSCLIENTE
	NOMBRE_CAMP ALIAS FOR $5;-- CAMPAÑA
	
	
BEGIN	
CONDICION := 'FECHA_FIN <> ''N/A'' AND  (FECHA_INICIO BETWEEN   '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )AND (FECHA_FIN BETWEEN  '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )';
-- CUANDO TIPOCLIENTE ES NO NULO 
IF ESTATUS_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (ESTATUSCLIENTE = '''|| ESTATUS_C ||''') ';
END IF;
-- CUANDO CAMPAÑA ES NO NULO
IF NOMBRE_CAMP IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CAMPANIA = '''|| NOMBRE_CAMP ||''') ' ;
END IF;
-- CUANDO CANAL ES NO NULO 
IF CANAL_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CANAL = '''|| CANAL_C ||''') ';
END IF;
DELETE FROM DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_COMPLETA;
EXECUTE IMMEDIATE 'INSERT INTO '|| REFTABLENAME ||' 
SELECT A.*, TASA_COMPRA_T, TASA_COMPRA-TASA_COMPRA_T AS DIF_RESPUESTA, DIF_RESPUESTA*CLIENTES AS CTS_ADICIONALES, CTS_ADICIONALES*VENTA_PROMEDIO AS VENTA_ADICIONAL
FROM (SELECT *
	FROM (SELECT CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL,COUNT(NUMCLIENTE)AS CLIENTES, SUM(COMPRAS) AS COMPRARON,
			SUM(COMPRAS)/COUNT(NUMCLIENTE) AS TASA_COMPRA, 
			
			SUM(SUM_PRECIO_VTA)AS VENTA_TOTAL,VENTA_TOTAL/COMPRARON AS VENTA_PROMEDIO,
			SUM(COMPRAS_RM)AS COMPRARON_RM,SUM(COMPRAS_RM)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_RM,
			SUM(SUM_PRECIO_VTA_RM) AS VENTA_TOTAL_RM,VENTA_TOTAL_RM/COMPRARON AS VENTA_PROMEDIO_RM,
			SUM(COMPRAS_P)AS COMPRARON_P,SUM(COMPRAS_P)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_P,
			SUM(SUM_PRECIO_VTA_P) AS VENTA_TOTAL_P,VENTA_TOTAL_P/COMPRARON AS VENTA_PROMEDIO_P,
			
			SUM(SUM_FACTURA) AS TICKETS, VENTA_TOTAL/TICKETS AS TICKET_PROM, VENTA_TOTAL_RM/TICKETS AS TICKET_PROM_RM,VENTA_TOTAL_P/TICKETS AS TICKET_PROM_P,
			SUM(ACTIVO)AS CLIENTE_ACTIVO,SUM(SALDADO)AS CLIENTE_SALDADO,SUM(NUNCA)AS CLIENTE_NUNCA,SUM(CUENTA_PERDIDA)AS CLIENTE_CUENTA_PERDIDA,
			
			SUM(RM_ACTIVO) AS RM_ACTIVO,SUM(RM_SALDADO) AS RM_SALDADO,SUM(RM_NUNCA) AS RM_NUNCA, SUM(RM_CUENTA_PERDIDA)AS RM_CUENTA_PERDIDA,
			
			SUM(P_ACTIVO) AS P_ACTIVO,SUM(P_SALDADO) AS P_SALDADO,SUM(P_NUNCA) AS P_NUNCA, SUM(P_CUENTA_PERDIDA)AS P_CUENTA_PERDIDA
		FROM(SELECT  NUMCLIENTE,	CANAL,	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
				MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX(SMS_CAMPANA)AS SMS_CAMPANA,	
				MAX(RCS_CAMPANA) AS RCS_CAMPANA,	MAX(LLAMADA) AS LLAMADA,	MAX(WHATSAPP)AS WHATSAPP,	
				MAX(EMAIL)AS EMAIL,	MAX(BANNER)AS BANNER,	MAX(CINTILLO) AS CINTILLO,	MAX(PUSH)AS PUSH,	
				MAX(REDES_SOCIALES)AS REDES_SOCIALES, SUM(FACTURA)AS SUM_FACTURA, SUM(PRECIO_VTA)AS SUM_PRECIO_VTA,SUM(PRECIO_VTA_RM) AS SUM_PRECIO_VTA_RM,
				SUM(PRECIO_VTA_P) AS SUM_PRECIO_VTA_P,
				MAX(COMPRA)AS COMPRAS,
				/*CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as PILOTO,*/
				MAX(COMPRA_RM)AS COMPRAS_RM, MAX(COMPRA_P)AS COMPRAS_P, 
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO''))THEN 1 ELSE NULL END AS ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO''))THEN 1 ELSE NULL END AS SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA''))THEN 1 ELSE NULL END AS NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA''))THEN 1 ELSE NULL END AS CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_RM > 0 )THEN 1 ELSE NULL END AS RM_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_P > 0 )THEN 1 ELSE NULL END AS P_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_CUENTA_PERDIDA
			FROM (SELECT  NUMCLIENTE,	CANAL,	UPPER(CAMPANIA)AS CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE,
					UPPER(ESTATUSCLIENTE)AS ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
					MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX("SMS_campana")AS SMS_campana,	
					MAX("RCS_campana") AS RCS_campana,	MAX("Llamada") AS Llamada,	MAX("Whatsapp")AS Whatsapp,	
					MAX("Email")AS Email,	MAX("Banner")AS Banner,	MAX("Cintillo") AS Cintillo,
					MAX("Push")AS Push,	MAX("Redes_sociales")AS Redes_sociales
				FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||' 
				GROUP BY NUMCLIENTE ,UPPER(CAMPANIA), UPPER(TIPOCLIENTE), ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA, SUM(PRECIO_VTA) AS PRECIO_VTA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM ,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0  END AS PRECIO_VTA_P,
						CASE WHEN CARTERA IN (''Ropa'', ''Muebles'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_RM,
						CASE WHEN CARTERA IN (''Prestamos'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_P
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN,CANAL)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN)P
		)A
		
		
LEFT JOIN(
	SELECT *
	FROM (SELECT CAMPANIA, TIPOCLIENTE,CANAL,SUM(COMPRAS)/COUNT(NUMCLIENTE)AS TASA_COMPRA_T
		FROM(SELECT  NUMCLIENTE,	CANAL,	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO,	FECHA_FIN,
				MAX(COMPRA)AS COMPRAS,CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as TIPO
			FROM (select  NUMCLIENTE,	CANAL,	CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE, ESTATUSCLIENTE,
					FECHA_INICIO,	FECHA_FIN
				from DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||' 
				GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_P,
						COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			WHERE  TIPO = 0
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO, CANAL
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO)P
		ORDER BY CAMPANIA, TIPOCLIENTE
		)B
ON A.CAMPANIA = B.CAMPANIA AND A.TIPOCLIENTE != B.TIPOCLIENTE
ORDER BY A.CAMPANIA, A.TIPOCLIENTE';
RETURN REFTABLE;
END;
END_PROC;

-- Ejecutamos este procedimiento almacenado cuando estatus cliente sea nulo
EXECUTE MA_PRUEBA_TRANS_COMPLETA('2022-10-01','2022-10-31','EMAIL',NULL,'OCT22_RU3_2E')


--creamos la tercera tabla que contiene la columna estatus cliente pero canal no
CREATE TABLE DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_1 (
	CAMPANIA VARCHAR(255),
	ESTATUSCLIENTE VARCHAR(255),
	TIPOCLIENTE VARCHAR(255),
	FECHA_INICIO VARCHAR(255),
	FECHA_FIN VARCHAR(255),
	CLIENTES BIGINT,
	COMPRARON NUMERIC(38,0),
	TASA_COMPRA NUMERIC(38,6),
	VENTA_TOTAL DOUBLE,
	VENTA_PROMEDIO DOUBLE,
	COMPRARON_RM NUMERIC(38,0),
	TASA_CLIENTE_RM NUMERIC(38,6),
	VENTA_TOTAL_RM DOUBLE,
	VENTA_PROMEDIO_RM DOUBLE,
	COMPRARON_P NUMERIC(38,0),
	TASA_CLIENTE_P NUMERIC(38,6),
	VENTA_TOTAL_P DOUBLE,
	VENTA_PROMEDIO_P DOUBLE,
	TICKETS NUMERIC(38,0),
	TICKET_PROM DOUBLE,
	TICKET_PROM_RM DOUBLE,
	TICKET_PROM_P DOUBLE,
	CLIENTE_ACTIVO NUMERIC(38,0),
	CLIENTE_SALDADO NUMERIC(38,0),
	CLIENTE_NUNCA NUMERIC(38,0),
	CLIENTE_CUENTA_PERDIDA NUMERIC(38,0),
	RM_ACTIVO NUMERIC(38,0),
	RM_SALDADO NUMERIC(38,0),
	RM_NUNCA NUMERIC(38,0),
	RM_CUENTA_PERDIDA NUMERIC(38,0),
	P_ACTIVO NUMERIC(38,0),
	P_SALDADO NUMERIC(38,0),
	P_NUNCA NUMERIC(38,0),
	P_CUENTA_PERDIDA NUMERIC(38,0),
	ESTATUS_TESTIGO VARCHAR(255),
	TASA_COMPRA_T NUMERIC(38,6),
	DIF_RESPUESTA NUMERIC(38,6),
	CTS_ADICIONALES NUMERIC(38,6),
	VENTA_ADICIONAL_RM DOUBLE
);


CREATE OR REPLACE PROCEDURE MA_PRUEBA_TRANS_1(VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255))
RETURNS REFTABLE(DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_1)
LANGUAGE NZPLSQL AS BEGIN_PROC
DECLARE
	CONDICION VARCHAR(1000); -- EN ESTA VARIABLE SE GUARDA LA CONDICION DEL QUERY WHERE
	FECHA_I ALIAS FOR $1;-- FECHA_INICIO
	FECHA_F ALIAS FOR $2;-- FECHA_FIN
	CANAL_C ALIAS FOR $3; --CANAL
	ESTATUS_C ALIAS FOR $4;-- ESTATUSCLIENTE
	NOMBRE_CAMP ALIAS FOR $5;-- CAMPAÑA
	
	
BEGIN	
CONDICION := 'FECHA_FIN <> ''N/A'' AND  (FECHA_INICIO BETWEEN   '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )AND (FECHA_FIN BETWEEN  '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )';
-- CUANDO TIPOCLIENTE ES NO NULO 
IF ESTATUS_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (ESTATUSCLIENTE = '''|| ESTATUS_C ||''') ';
END IF;
-- CUANDO CAMPAÑA ES NO NULO
IF NOMBRE_CAMP IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CAMPANIA = '''|| NOMBRE_CAMP ||''') ' ;
END IF;
-- CUANDO CANAL ES NO NULO 
IF CANAL_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CANAL = '''|| CANAL_C ||''') ';
END IF;
DELETE FROM DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_1;
EXECUTE IMMEDIATE 'INSERT INTO '|| REFTABLENAME ||' 
SELECT A.*,ESTATUS_TESTIGO, TASA_COMPRA_T, TASA_COMPRA-TASA_COMPRA_T AS DIF_RESPUESTA, DIF_RESPUESTA*CLIENTES AS CTS_ADICIONALES, CTS_ADICIONALES*VENTA_PROMEDIO AS VENTA_ADICIONAL
FROM (SELECT *
	FROM (SELECT CAMPANIA,ESTATUSCLIENTE, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, COUNT(NUMCLIENTE)AS CLIENTES, SUM(COMPRAS) AS COMPRARON,
			SUM(COMPRAS)/COUNT(NUMCLIENTE) AS TASA_COMPRA, 
			
			SUM(SUM_PRECIO_VTA)AS VENTA_TOTAL,VENTA_TOTAL/COMPRARON AS VENTA_PROMEDIO,
			SUM(COMPRAS_RM)AS COMPRARON_RM,SUM(COMPRAS_RM)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_RM,
			SUM(SUM_PRECIO_VTA_RM) AS VENTA_TOTAL_RM,VENTA_TOTAL_RM/COMPRARON AS VENTA_PROMEDIO_RM,
			SUM(COMPRAS_P)AS COMPRARON_P,SUM(COMPRAS_P)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_P,
			SUM(SUM_PRECIO_VTA_P) AS VENTA_TOTAL_P,VENTA_TOTAL_P/COMPRARON AS VENTA_PROMEDIO_P,
			
			SUM(SUM_FACTURA) AS TICKETS, VENTA_TOTAL/TICKETS AS TICKET_PROM, VENTA_TOTAL_RM/TICKETS AS TICKET_PROM_RM,VENTA_TOTAL_P/TICKETS AS TICKET_PROM_P,
			SUM(ACTIVO)AS CLIENTE_ACTIVO,SUM(SALDADO)AS CLIENTE_SALDADO,SUM(NUNCA)AS CLIENTE_NUNCA,SUM(CUENTA_PERDIDA)AS CLIENTE_CUENTA_PERDIDA,
			
			SUM(RM_ACTIVO) AS RM_ACTIVO,SUM(RM_SALDADO) AS RM_SALDADO,SUM(RM_NUNCA) AS RM_NUNCA, SUM(RM_CUENTA_PERDIDA)AS RM_CUENTA_PERDIDA,
			
			SUM(P_ACTIVO) AS P_ACTIVO,SUM(P_SALDADO) AS P_SALDADO,SUM(P_NUNCA) AS P_NUNCA, SUM(P_CUENTA_PERDIDA)AS P_CUENTA_PERDIDA
		FROM(SELECT  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
				MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX(SMS_CAMPANA)AS SMS_CAMPANA,	
				MAX(RCS_CAMPANA) AS RCS_CAMPANA,	MAX(LLAMADA) AS LLAMADA,	MAX(WHATSAPP)AS WHATSAPP,	
				MAX(EMAIL)AS EMAIL,	MAX(BANNER)AS BANNER,	MAX(CINTILLO) AS CINTILLO,	MAX(PUSH)AS PUSH,	
				MAX(REDES_SOCIALES)AS REDES_SOCIALES, SUM(FACTURA)AS SUM_FACTURA, SUM(PRECIO_VTA)AS SUM_PRECIO_VTA,SUM(PRECIO_VTA_RM) AS SUM_PRECIO_VTA_RM,
				SUM(PRECIO_VTA_P) AS SUM_PRECIO_VTA_P,
				MAX(COMPRA)AS COMPRAS,
				MAX(COMPRA_RM)AS COMPRAS_RM, MAX(COMPRA_P)AS COMPRAS_P, 
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO''))THEN 1 ELSE NULL END AS ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO''))THEN 1 ELSE NULL END AS SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA''))THEN 1 ELSE NULL END AS NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA''))THEN 1 ELSE NULL END AS CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_RM > 0 )THEN 1 ELSE NULL END AS RM_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_P > 0 )THEN 1 ELSE NULL END AS P_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_CUENTA_PERDIDA
			FROM (SELECT  NUMCLIENTE,	/*CANAL,*/	UPPER(CAMPANIA)AS CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE,
					UPPER(ESTATUSCLIENTE)AS ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
					MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX("SMS_campana")AS SMS_campana,	
					MAX("RCS_campana") AS RCS_campana,	MAX("Llamada") AS Llamada,	MAX("Whatsapp")AS Whatsapp,	
					MAX("Email")AS Email,	MAX("Banner")AS Banner,	MAX("Cintillo") AS Cintillo,
					MAX("Push")AS Push,	MAX("Redes_sociales")AS Redes_sociales
				FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||'  GROUP BY NUMCLIENTE ,UPPER(CAMPANIA), UPPER(TIPOCLIENTE), ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA, SUM(PRECIO_VTA) AS PRECIO_VTA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM ,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0  END AS PRECIO_VTA_P,
						CASE WHEN CARTERA IN (''Ropa'', ''Muebles'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_RM,
						CASE WHEN CARTERA IN (''Prestamos'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_P
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, ESTATUSCLIENTE
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN)P
		)A
		
		
LEFT JOIN(
	SELECT *
	FROM (SELECT CAMPANIA,UPPER(ESTATUSCLIENTE) as ESTATUS_TESTIGO, TIPOCLIENTE,SUM(COMPRAS)/COUNT(NUMCLIENTE)AS TASA_COMPRA_T
		FROM(SELECT  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO,	FECHA_FIN,
				MAX(COMPRA)AS COMPRAS,CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as TIPO
			FROM (select  NUMCLIENTE,	/*CANAL,*/	CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE, ESTATUSCLIENTE,
					FECHA_INICIO,	FECHA_FIN
				from DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||' GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_P,
						COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			WHERE  TIPO = 0
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO, ESTATUSCLIENTE
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO)P
		)B
ON A.CAMPANIA = B.CAMPANIA AND A.TIPOCLIENTE != B.TIPOCLIENTE
ORDER BY A.CAMPANIA, A.TIPOCLIENTE, ESTATUSCLIENTE';
RETURN REFTABLE;
END;
END_PROC;

-- Se ejecuta este procedimiento almacenado cuando canal es nulo
EXECUTE MA_PRUEBA_TRANS_1('2022-10-01','2022-10-31',NULL,'Activo','OCT22_RU3_2E')



-- Creamos la cuarta tabla que contiene la columna canal y estatus cliente
CREATE TABLE DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_2 (
	CAMPANIA VARCHAR(255),
	ESTATUSCLIENTE VARCHAR(255),
	TIPOCLIENTE VARCHAR(255),
	FECHA_INICIO VARCHAR(255),
	FECHA_FIN VARCHAR(255),
	CANAL VARCHAR(255),
	CLIENTES BIGINT,
	COMPRARON NUMERIC(38,0),
	TASA_COMPRA NUMERIC(38,6),
	VENTA_TOTAL DOUBLE,
	VENTA_PROMEDIO DOUBLE,
	COMPRARON_RM NUMERIC(38,0),
	TASA_CLIENTE_RM NUMERIC(38,6),
	VENTA_TOTAL_RM DOUBLE,
	VENTA_PROMEDIO_RM DOUBLE,
	COMPRARON_P NUMERIC(38,0),
	TASA_CLIENTE_P NUMERIC(38,6),
	VENTA_TOTAL_P DOUBLE,
	VENTA_PROMEDIO_P DOUBLE,
	TICKETS NUMERIC(38,0),
	TICKET_PROM DOUBLE,
	TICKET_PROM_RM DOUBLE,
	TICKET_PROM_P DOUBLE,
	CLIENTE_ACTIVO NUMERIC(38,0),
	CLIENTE_SALDADO NUMERIC(38,0),
	CLIENTE_NUNCA NUMERIC(38,0),
	CLIENTE_CUENTA_PERDIDA NUMERIC(38,0),
	RM_ACTIVO NUMERIC(38,0),
	RM_SALDADO NUMERIC(38,0),
	RM_NUNCA NUMERIC(38,0),
	RM_CUENTA_PERDIDA NUMERIC(38,0),
	P_ACTIVO NUMERIC(38,0),
	P_SALDADO NUMERIC(38,0),
	P_NUNCA NUMERIC(38,0),
	P_CUENTA_PERDIDA NUMERIC(38,0),
	ESTATUS_TESTIGO VARCHAR(255),
	TASA_COMPRA_T NUMERIC(38,6),
	DIF_RESPUESTA NUMERIC(38,6),
	CTS_ADICIONALES NUMERIC(38,6),
	VENTA_ADICIONAL_RM DOUBLE
);


CREATE OR REPLACE PROCEDURE MA_PRUEBA_TRANS_2(VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255),VARCHAR(255))
RETURNS REFTABLE(DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_2)
LANGUAGE NZPLSQL AS BEGIN_PROC
DECLARE
	CONDICION VARCHAR(1000); -- EN ESTA VARIABLE SE GUARDA LA CONDICION DEL QUERY WHERE
	FECHA_I ALIAS FOR $1;-- FECHA_INICIO
	FECHA_F ALIAS FOR $2;-- FECHA_FIN
	CANAL_C ALIAS FOR $3; --CANAL
	ESTATUS_C ALIAS FOR $4;-- ESTATUSCLIENTE
	NOMBRE_CAMP ALIAS FOR $5;-- CAMPAÑA
	
	
BEGIN	
CONDICION := 'FECHA_FIN <> ''N/A'' AND  (FECHA_INICIO BETWEEN   '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )AND (FECHA_FIN BETWEEN  '''|| FECHA_I ||'''  AND  '''|| FECHA_F ||'''  )';
-- CUANDO TIPOCLIENTE ES NO NULO 
IF ESTATUS_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (ESTATUSCLIENTE = '''|| ESTATUS_C ||''') ';
END IF;
-- CUANDO CAMPAÑA ES NO NULO
IF NOMBRE_CAMP IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CAMPANIA = '''|| NOMBRE_CAMP ||''') ' ;
END IF;
-- CUANDO CANAL ES NO NULO 
IF CANAL_C IS NOT NULL THEN
	CONDICION:= CONDICION || ' AND (CANAL = '''|| CANAL_C ||''') ';
END IF;
DELETE FROM DIRECCIONRIESGOS.ADMIN.MA_PRUEBA_TRANS_2;
EXECUTE IMMEDIATE 'INSERT INTO '|| REFTABLENAME ||' 
SELECT A.*, ESTATUS_TESTIGO,TASA_COMPRA_T, TASA_COMPRA-TASA_COMPRA_T AS DIF_RESPUESTA, DIF_RESPUESTA*CLIENTES AS CTS_ADICIONALES, CTS_ADICIONALES*VENTA_PROMEDIO AS VENTA_ADICIONAL
FROM (SELECT *
	FROM (SELECT CAMPANIA,ESTATUSCLIENTE, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL,COUNT(NUMCLIENTE)AS CLIENTES, SUM(COMPRAS) AS COMPRARON,
			SUM(COMPRAS)/COUNT(NUMCLIENTE) AS TASA_COMPRA, 
			
			SUM(SUM_PRECIO_VTA)AS VENTA_TOTAL,VENTA_TOTAL/COMPRARON AS VENTA_PROMEDIO,
			SUM(COMPRAS_RM)AS COMPRARON_RM,SUM(COMPRAS_RM)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_RM,
			SUM(SUM_PRECIO_VTA_RM) AS VENTA_TOTAL_RM,VENTA_TOTAL_RM/COMPRARON AS VENTA_PROMEDIO_RM,
			SUM(COMPRAS_P)AS COMPRARON_P,SUM(COMPRAS_P)/COUNT(NUMCLIENTE)AS TASA_CLIENTE_P,
			SUM(SUM_PRECIO_VTA_P) AS VENTA_TOTAL_P,VENTA_TOTAL_P/COMPRARON AS VENTA_PROMEDIO_P,
			
			SUM(SUM_FACTURA) AS TICKETS, VENTA_TOTAL/TICKETS AS TICKET_PROM, VENTA_TOTAL_RM/TICKETS AS TICKET_PROM_RM,VENTA_TOTAL_P/TICKETS AS TICKET_PROM_P,
			SUM(ACTIVO)AS CLIENTE_ACTIVO,SUM(SALDADO)AS CLIENTE_SALDADO,SUM(NUNCA)AS CLIENTE_NUNCA,SUM(CUENTA_PERDIDA)AS CLIENTE_CUENTA_PERDIDA,
			
			SUM(RM_ACTIVO) AS RM_ACTIVO,SUM(RM_SALDADO) AS RM_SALDADO,SUM(RM_NUNCA) AS RM_NUNCA, SUM(RM_CUENTA_PERDIDA)AS RM_CUENTA_PERDIDA,
			
			SUM(P_ACTIVO) AS P_ACTIVO,SUM(P_SALDADO) AS P_SALDADO,SUM(P_NUNCA) AS P_NUNCA, SUM(P_CUENTA_PERDIDA)AS P_CUENTA_PERDIDA
		FROM(SELECT  NUMCLIENTE,	CANAL,	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
				MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX(SMS_CAMPANA)AS SMS_CAMPANA,	
				MAX(RCS_CAMPANA) AS RCS_CAMPANA,	MAX(LLAMADA) AS LLAMADA,	MAX(WHATSAPP)AS WHATSAPP,	
				MAX(EMAIL)AS EMAIL,	MAX(BANNER)AS BANNER,	MAX(CINTILLO) AS CINTILLO,	MAX(PUSH)AS PUSH,	
				MAX(REDES_SOCIALES)AS REDES_SOCIALES, SUM(FACTURA)AS SUM_FACTURA, SUM(PRECIO_VTA)AS SUM_PRECIO_VTA,SUM(PRECIO_VTA_RM) AS SUM_PRECIO_VTA_RM,
				SUM(PRECIO_VTA_P) AS SUM_PRECIO_VTA_P,
				MAX(COMPRA)AS COMPRAS,
				/*CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as PILOTO,*/
				MAX(COMPRA_RM)AS COMPRAS_RM, MAX(COMPRA_P)AS COMPRAS_P, 
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO''))THEN 1 ELSE NULL END AS ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO''))THEN 1 ELSE NULL END AS SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA''))THEN 1 ELSE NULL END AS NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA''))THEN 1 ELSE NULL END AS CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_RM > 0 )THEN 1 ELSE NULL END AS RM_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_RM > 0)THEN 1 ELSE NULL END AS RM_CUENTA_PERDIDA,
					
					CASE WHEN(ESTATUSCLIENTE IN (''ACTIVO'')AND COMPRAS_P > 0 )THEN 1 ELSE NULL END AS P_ACTIVO,
					CASE WHEN(ESTATUSCLIENTE IN (''SALDADO'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_SALDADO,
					CASE WHEN(ESTATUSCLIENTE IN (''NUNCA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_NUNCA,
					CASE WHEN(ESTATUSCLIENTE IN (''CUENTA PERDIDA'')AND COMPRAS_P > 0)THEN 1 ELSE NULL END AS P_CUENTA_PERDIDA
			FROM (SELECT  NUMCLIENTE,	CANAL,	UPPER(CAMPANIA)AS CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE,
					UPPER(ESTATUSCLIENTE)AS ESTATUSCLIENTE,MAX(SALDO_DE) AS SALDO_DE,
					MAX(UTILIDAD_12M) AS UTILIDAD_12M , FECHA_INICIO,	FECHA_FIN,	MAX("SMS_campana")AS SMS_campana,	
					MAX("RCS_campana") AS RCS_campana,	MAX("Llamada") AS Llamada,	MAX("Whatsapp")AS Whatsapp,	
					MAX("Email")AS Email,	MAX("Banner")AS Banner,	MAX("Cintillo") AS Cintillo,
					MAX("Push")AS Push,	MAX("Redes_sociales")AS Redes_sociales
				FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||'
				GROUP BY NUMCLIENTE ,UPPER(CAMPANIA), UPPER(TIPOCLIENTE), ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA, SUM(PRECIO_VTA) AS PRECIO_VTA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM ,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0  END AS PRECIO_VTA_P,
						CASE WHEN CARTERA IN (''Ropa'', ''Muebles'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_RM,
						CASE WHEN CARTERA IN (''Prestamos'')THEN MAX(COMPRA) ELSE NULL END as COMPRA_P
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN,CANAL)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL, ESTATUSCLIENTE 
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN)P
		)A
		
		
LEFT JOIN(
	SELECT *
	FROM (SELECT CAMPANIA,UPPER(ESTATUSCLIENTE) as ESTATUS_TESTIGO, TIPOCLIENTE,CANAL,SUM(COMPRAS)/COUNT(NUMCLIENTE)AS TASA_COMPRA_T
		FROM(SELECT  NUMCLIENTE,	CANAL,	CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO,	FECHA_FIN,
				MAX(COMPRA)AS COMPRAS,CASE WHEN TIPOCLIENTE IN (''TESTIGO'',''testigo'')THEN 0 ELSE 1 END as TIPO
			FROM (select  NUMCLIENTE,	CANAL,	CAMPANIA, UPPER(TIPOCLIENTE) AS TIPOCLIENTE, ESTATUSCLIENTE,
					FECHA_INICIO,	FECHA_FIN
				from DIRECCIONRIESGOS.ADMIN.TRANSACCIONAL_CAMPANIAS_AGO_SEP
				WHERE '|| CONDICION ||'
				GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)A
			LEFT JOIN (SELECT CLIENTECODIGO,FECHACOMPRA,
						CASE WHEN( CARTERA IN (''Ropa'', ''Muebles''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_RM,
						CASE WHEN( CARTERA IN (''Prestamos''))THEN SUM(PRECIO_VTA) ELSE 0 END AS PRECIO_VTA_P,
						COUNT( DISTINCT FACTURA) AS FACTURA, 1 AS COMPRA
						FROM DIRECCIONRIESGOS.ADMIN.TRANSACCIONESCARTERAS
						GROUP BY CLIENTECODIGO, FECHACOMPRA, CARTERA)B
			ON A.NUMCLIENTE = B.CLIENTECODIGO AND B.FECHACOMPRA BETWEEN A.FECHA_INICIO AND A.FECHA_FIN
			WHERE  TIPO = 0
			GROUP BY NUMCLIENTE ,CAMPANIA, TIPOCLIENTE, ESTATUSCLIENTE, FECHA_INICIO, FECHA_FIN, CANAL)C
		GROUP BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO, CANAL, ESTATUSCLIENTE
		ORDER BY CAMPANIA, TIPOCLIENTE, FECHA_INICIO, FECHA_FIN, TIPO)P
		ORDER BY CAMPANIA, TIPOCLIENTE
		)B
ON A.CAMPANIA = B.CAMPANIA AND A.TIPOCLIENTE != B.TIPOCLIENTE
ORDER BY A.CAMPANIA, A.TIPOCLIENTE, ESTATUSCLIENTE, ESTATUS_TESTIGO';
RETURN REFTABLE;
END;
END_PROC;

-- Se ejecuta cuando se tiene estatus cliente y canal 
EXECUTE MA_PRUEBA_TRANS_2('2022-10-01','2022-10-31','EMAIL','Activo','OCT22_RU3_2E')



----TODOS LOS CASOS----
-- El orden de ejecucion es  (FECHA INICIO, FECHA FIN, CANAL, ESTATUS CLIENTE, CAMPAÑA)
-- CUANDO CANAL Y ESTATUS SON NULOS
EXECUTE MA_PRUEBA_TRANS_ULTIMA('2022-10-01','2022-10-31',NULL,NULL,'OCT22_RU3_2E')
-- CUANDO SOLO ESTATUS ES NULO
EXECUTE MA_PRUEBA_TRANS_COMPLETA('2022-10-01','2022-10-31','EMAIL',NULL,'OCT22_RU3_2E')
-- CUANDO SOLO CANAL ES NULO
EXECUTE MA_PRUEBA_TRANS_1('2022-10-01','2022-10-31',NULL,'Activo','OCT22_RU3_2E')
-- CUANDO NINGUNO ES NULO
EXECUTE MA_PRUEBA_TRANS_2('2022-10-01','2022-10-31','EMAIL','Activo','OCT22_RU3_2E')

